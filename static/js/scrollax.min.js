/**
 *  _______ _______  ______  _____                _______ _     _
 *  |______ |       |_____/ |     | |      |      |_____|  \___/
 *  ______| |_____  |    \_ |_____| |_____ |_____ |     | _/   \_
 *
 *  Parallax Scrolling Library
 *  http://iprodev.github.io/Scrollax.js
 *
 *  @version:  1.0.0
 *  @released: July 21, 2015
 *
 *  @author:   iProDev (Hemn Chawroka)
 *             http://iprodev.com/
 *
 *  Licensed under the MIT license.
 *  http://opensource.org/licenses/MIT
 *
 */
(function (e) { typeof define === 'function' && define.amd ? define(['jquery'], e) : typeof exports !== 'undefined' ? module.exports = e(require('jquery')) : e(jQuery) })(function (e) {
  function W (a) { if (console && console.warn) { console.warn('Scrollax: ' + a) } else { throw 'Scrollax: ' + a } } function ka (a) {
    const g = !!('pageYOffset' in a); return {
      width: g ? window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth : a.offsetWidth,
      height: g ? window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight
        : a.offsetHeight,
      left: a[g ? 'pageXOffset' : 'scrollLeft'],
      top: a[g ? 'pageYOffset' : 'scrollTop']
    }
  } function X (a) { return (a = a.data('scrollax')) && eval('({' + a + '})') || {} } function Y (a) { let g, c; return !!(a && typeof a === 'object' && typeof a.window === 'object' && a.window == a && a.setTimeout && a.alert && (g = a.document) && typeof g === 'object' && (c = g.defaultView || g.parentWindow) && typeof c === 'object' && c == a) } var v = Array.prototype; const C = v.push; const Z = v.splice; const aa = Object.prototype.hasOwnProperty; const la = /[-+]?\d+(\.\d+)?/g; const ma = 'translateX translateY rotate rotateX rotateY rotateZ skewX skewY scaleX scaleY'.split(' ')
  const ba = e(window); const ca = e(document.body); let da; let ea; let L; let M; let N; var q = function (a, g, c) {
    function k () { O = fa ? ca.find(ga) : P.find(ga); x.length = 0; r = !!t.horizontal; O.each(na); d(); t.performanceTrick && (F = fa ? ca : P); u('load'); return f } function l () { G && (G = clearTimeout(G)); G = setTimeout(function () { f.reload() }) } function d () {
      const ha = x.length; t.performanceTrick && F && (clearTimeout(ia), Q || (F.addClass('scrollax-performance'), Q = !0), ia = setTimeout(function () { F.removeClass('scrollax-performance'); Q = !1 }, 100)); if (ha) {
        H = ka(a); for (let c = 0; c < ha; c++) {
          I = x[c],
          y = L(I.element, a), y[r ? 'right' : 'bottom'] < 0 || y[r ? 'left' : 'top'] > H[r ? 'width' : 'height'] || (ja = I.options, R = ja.offset || t.offset || 0, J = y[r ? 'right' : 'bottom'], z = y[r ? 'width' : 'height'], A = (z - J + R) / z, A < 0 && (J = y[r ? 'left' : 'top'], z = H[r ? 'width' : 'height'], A = -1 + (z - J + R) / z), A > 1 || A < -1 || b(I, A, r))
        }u('scroll', H)
      }
    } function b (a, b) {
      S = a.parallaxElements; const c = S.length; if (c) {
        for (let f = 0; f < c; f++) {
          T = S[f]; const g = oa = T.element; const d = b; U = T.properties || (r ? { translateX: '100%' } : { translateY: '100%' }); D = ''; for (B in U) {
            n = U[B]; if (typeof n === 'number') {
              n *=
d
            } else if (typeof n === 'string') { for (K = n.match(la), m = 0, E = K.length; m < E; m++) { n = n.replace(K[m], parseFloat(K[m] * d)) } } if (e.inArray(B, ma) !== -1) { D += B + '(' + n + ')' } else { const k = g.style; const l = B; var h; B === 'opacity' ? (h = d < 0 ? 1 + n : 1 - n, h = h < 0 ? 0 : h > 1 ? 1 : h) : h = n; k[l] = h }
          }D && (g.style[da] = ea + D)
        }
      }
    } function pa (a) { return typeof a !== 'undefined' ? typeof a !== 'number' && typeof a !== 'string' || a === '' || isNaN(a) ? O.index(a) : a >= 0 && a < x.length ? a : -1 : -1 } function u (a, b) {
      if (h[a]) {
        E = h[a].length; for (m = V.length = 0; m < E; m++) { C.call(V, h[a][m]) } for (m = 0; m < E; m++) {
          V[m].call(f,
            a, b)
        }
      }
    } function p (a, b) { for (let c = 0, f = h[a].length; c < f; c++) { if (h[a][c] === b) { return c } } return -1 } var f = this; var P = a && e(a).eq(0) || ba; const w = q.instances; let v = null; a = P[0]; e.each(w, function (b, c) { b && b.frame === a && (v = !0) }); if (!a || v) { v ? W('Scrollax: Scrollax has been initialized for this frame!') : W('Scrollax: Frame is not available!') } else {
      var t = e.extend({}, q.defaults, g); var x = []; var O = null; var ga = t.parentSelector || '[data-scrollax-parent]'; const qa = t.elementsSelector || '[data-scrollax]'; var h = {}; var V = []; var G; var fa = Y(a); var m; var E; var F; var ia; var Q; var H; var r; var R; var y; var I; var ja; var A; var J; var z; var S; var T; var oa; var U
      var B; var n; var D; var K; f.frame = a; f.options = t; f.parents = x; f.initialized = !1; f.reload = k; var na = function (a, b) { const c = e(b); const f = X(e(b)); const d = {}; d.element = b; d.options = f; d.parallaxElements = []; c.find(qa).each(function (a, b) { const c = X(e(b)); c.element = b; C.call(d.parallaxElements, c) }); C.call(x, d) }; f.scroll = d; f.getIndex = pa; f.one = function (a, b) { function c () { b.apply(f, arguments); f.off(a, c) }f.on(a, c); return f }; f.on = function (a, b) {
        if (typeof a === 'object') { for (var c in a) { if (aa.call(a, c)) { f.on(c, a[c]) } } } else if (typeof b === 'function') {
          c = a.split(' ')
          for (var d = 0, g = c.length; d < g; d++) { h[c[d]] = h[c[d]] || [], p(c[d], b) === -1 && C.call(h[c[d]], b) }
        } else if (typeof b === 'array') { for (c = 0, d = b.length; c < d; c++) { f.on(a, b[c]) } } return f
      }; f.off = function (a, c) { if (Array.isArray(c)) { for (var b = 0, d = c.length; b < d; b++) { f.off(a, c[b]) } } else { for (var b = a.split(' '), d = 0, g = b.length; d < g; d++) { if (h[b[d]] = h[b[d]] || [], typeof c === 'undefined') { h[b[d]].length = 0 } else { const k = p(b[d], c); k !== -1 && Z.call(h[b[d]], k, 1) } } } return f }; f.set = function (a, b) {
        e.isPlainObject(a) ? e.extend(t, a) : aa.call(t, a) && (t[a] = b); k()
        return f
      }; f.destroy = function () { N(window, 'resize', l); N(a, 'scroll', d); e.each(w, function (b, c) { b && b.frame === a && Z.call(q.instances, c, 1) }); x.length = 0; f.initialized = !1; u('destroy'); return f }; f.init = function () { if (!f.initialized) { return f.on(c), k(), M(window, 'resize', l), M(a, 'scroll', d), C.call(q.instances, f), f.initialized = !0, u('initialized'), f } }
    }
  }; q.instances = []; (function () {
    let a, g, c, k, l, d, b, e; L = function (u, p) {
      g = u.ownerDocument || u; c = g.documentElement; k = Y(p) ? p : g.defaultView || window; p = p && p !== g ? p : c; l = (k.pageYOffset ||
c.scrollTop) - c.clientTop; d = (k.pageXOffset || c.scrollLeft) - c.clientLeft; b = { top: 0, left: 0 }; if (u && u.getBoundingClientRect) { const f = {}; const q = u.getBoundingClientRect(); for (a in q) { f[a] = q[a] }b = f; b.width = b.right - b.left; b.height = b.bottom - b.top } else { return null } if (p === k) { return b } b.top += l; b.left += d; b.right += d; b.bottom += l; if (p === c) { return b } e = L(p); b.left -= e.left; b.right -= e.left; b.top -= e.top; b.bottom -= e.top; return b
    }
  })(); (function () {
    function a () { this.returnValue = !1 } function g () { this.cancelBubble = !0 }M = window.addEventListener
      ? function (a, g, e, d) { a.addEventListener(g, e, d || !1); return e } : function (c, e, l) { const d = e + l; c[d] = c[d] || function () { const b = window.event; b.target = b.srcElement; b.preventDefault = a; b.stopPropagation = g; l.call(c, b) }; c.attachEvent('on' + e, c[d]); return l }; N = window.removeEventListener ? function (a, g, e, d) { a.removeEventListener(g, e, d || !1); return e } : function (a, g, e) { const d = g + e; a.detachEvent('on' + g, a[d]); try { delete a[d] } catch (b) { a[d] = void 0 } return e }
  })(); (function () {
    function a (a) {
      for (let e = 0, d = g.length; e < d; e++) {
        const b = g[e] ? g[e] +
a.charAt(0).toUpperCase() + a.slice(1) : a; if (c.style[b] != null) { return b }
      }
    } var g = ['', 'webkit', 'moz', 'ms', 'o']; var c = document.createElement('div'); da = a('transform'); ea = a('perspective') ? 'translateZ(0) ' : ''
  })(); q.defaults = { horizontal: !1, offset: 0, parentSelector: null, elementsSelector: null, performanceTrick: !1 }; window.Scrollax = q; e.fn.Scrollax = function (a, g) {
    let c, k; if (!e.isPlainObject(a)) { if (typeof a === 'string' || !1 === a) { c = !1 === a ? 'destroy' : a, k = slice.call(arguments, 1) }a = {} } return this.each(function (l, d) {
      const b = e.data(d,
        'scrollax'); b || c ? b && c && b[c] && b[c].apply(b, k) : e.data(d, 'scrollax', (new q(d, a, g)).init())
    })
  }; e.Scrollax = function (a, e) { ba.Scrollax(a, e) }; var v = document.head || document.getElementsByTagName('head')[0]; const w = document.createElement('style'); w.type = 'text/css'; w.styleSheet ? w.styleSheet.cssText = '.scrollax-performance, .scrollax-performance *, .scrollax-performance *:before, .scrollax-performance *:after { pointer-events: none !important; -webkit-animation-play-state: paused !important; animation-play-state: paused !important; };'
    : w.appendChild(document.createTextNode('.scrollax-performance, .scrollax-performance *, .scrollax-performance *:before, .scrollax-performance *:after { pointer-events: none !important; -webkit-animation-play-state: paused !important; animation-play-state: paused !important; };')); v.appendChild(w); return q
})
